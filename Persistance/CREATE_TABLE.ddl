-- Generated by Oracle SQL Developer Data Modeler 4.1.5.907
--   at:        2019-02-20 16:29:41 CET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c





CREATE OR REPLACE PACKAGE API_CANTONS IS 
api_row CANTONS%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
LIBELLE api_row.LIBELLE%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF CANTONS%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_CANTONS;

/


CREATE OR REPLACE PACKAGE API_CATEGORIES IS 
api_row CATEGORIES%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
LIBELLE api_row.LIBELLE%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF CATEGORIES%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_CATEGORIES;

/


CREATE OR REPLACE PACKAGE API_CONDITIONECOLES IS 
api_row CONDITIONECOLES%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
OFF_NUMERO api_row.OFF_NUMERO%TYPE,
ECO_NUMERO api_row.ECO_NUMERO%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF CONDITIONECOLES%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_CONDITIONECOLES;

/
CREATE OR REPLACE PACKAGE API_CONDITIONS IS 
api_row CONDITIONS%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
LIBELLE api_row.LIBELLE%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF CONDITIONS%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_CONDITIONS;

/


CREATE OR REPLACE PACKAGE API_ECOLES IS 
api_row ECOLES%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
LIBELLE api_row.LIBELLE%TYPE,
LOC_NUMERO api_row.LOC_NUMERO%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF ECOLES%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_ECOLES;

/


CREATE OR REPLACE PACKAGE API_ETUDIERS IS 
api_row ETUDIERS%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
PRO_NUMERO api_row.PRO_NUMERO%TYPE,
ECO_NUMERO api_row.ECO_NUMERO%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF ETUDIERS%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_ETUDIERS;

/


CREATE OR REPLACE PACKAGE API_EVALUATIONS IS 
api_row EVALUATIONS%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
AIME api_row.AIME%TYPE,
PRO_NUMERO api_row.PRO_NUMERO%TYPE,
OFF_NUMERO api_row.OFF_NUMERO%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF EVALUATIONS%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_EVALUATIONS;

/


CREATE OR REPLACE PACKAGE API_INTERETCATEGORIES IS 
api_row INTERETCATEGORIES%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
PRO_NUMERO api_row.PRO_NUMERO%TYPE,
CAT_NUMERO api_row.CAT_NUMERO%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF INTERETCATEGORIES%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_INTERETCATEGORIES;

/


CREATE OR REPLACE PACKAGE API_INTERETLIEUX IS 
api_row INTERETLIEUX%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
PRO_NUMERO api_row.PRO_NUMERO%TYPE,
CAN_NUMERO api_row.CAN_NUMERO%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF INTERETLIEUX%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_INTERETLIEUX;

/


CREATE OR REPLACE PACKAGE API_LOCALITES IS 
api_row LOCALITES%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
VILLE api_row.VILLE%TYPE,
NPA api_row.NPA%TYPE,
CAN_NUMERO api_row.CAN_NUMERO%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF LOCALITES%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_LOCALITES;

/


CREATE OR REPLACE PACKAGE API_OFFRECANTONS IS 
api_row OFFRECANTONS%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
OFF_NUMERO api_row.OFF_NUMERO%TYPE,
CAN_NUMERO api_row.CAN_NUMERO%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF OFFRECANTONS%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_OFFRECANTONS;

/


CREATE OR REPLACE PACKAGE API_OFFRECATEGORIES IS 
api_row OFFRECATEGORIES%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
CAT_NUMERO api_row.CAT_NUMERO%TYPE,
OFF_NUMERO api_row.OFF_NUMERO%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF OFFRECATEGORIES%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_OFFRECATEGORIES;

/


CREATE OR REPLACE PACKAGE API_OFFRES IS 
api_row OFFRES%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
LIBELLE api_row.LIBELLE%TYPE,
DESCRIPTION api_row.DESCRIPTION%TYPE,
ORGANISATION api_row.ORGANISATION%TYPE,
RUE api_row.RUE%TYPE,
NUMERORUE api_row.NUMERORUE%TYPE,
LIEN api_row.LIEN%TYPE,
IMAGE api_row.IMAGE%TYPE,
DATEDEBUT api_row.DATEDEBUT%TYPE,
DATEFIN api_row.DATEFIN%TYPE,
ESTVALIDEE api_row.ESTVALIDEE%TYPE,
CON_NUMERO api_row.CON_NUMERO%TYPE,
TRAB_NUMERO api_row.TRAB_NUMERO%TYPE,
PRO_NUMERO api_row.PRO_NUMERO%TYPE,
PRO_NUMERO2 api_row.PRO_NUMERO2%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
LOC_NUMERO api_row.LOC_NUMERO%TYPE,
MONTANT api_row.MONTANT%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF OFFRES%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_OFFRES;

/


CREATE OR REPLACE PACKAGE API_PROFILS IS 
api_row PROFILS%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
EMAIL api_row.EMAIL%TYPE,
MOTDEPASSE api_row.MOTDEPASSE%TYPE,
PRENOM api_row.PRENOM%TYPE,
NOM api_row.NOM%TYPE,
DATENAISSANCE api_row.DATENAISSANCE%TYPE,
SEXE api_row.SEXE%TYPE,
NOTIFICATION api_row.NOTIFICATION%TYPE,
ADMIN api_row.ADMIN%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF PROFILS%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_PROFILS;

/


CREATE OR REPLACE PACKAGE API_TYPERABAIS IS 
api_row TYPERABAIS%ROWTYPE; 
TYPE api_row_type IS RECORD (
NUMERO api_row.NUMERO%TYPE,
LIBELLE api_row.LIBELLE%TYPE,
CTRLAJUSER api_row.CTRLAJUSER%TYPE,
CTRLAJDATE api_row.CTRLAJDATE%TYPE,
CTRLMOUSER api_row.CTRLMOUSER%TYPE,
CTRLMODATE api_row.CTRLMODATE%TYPE,
the_rowid ROWID);
TYPE api_table_type IS TABLE OF TYPERABAIS%ROWTYPE INDEX BY BINARY_INTEGER;
api_table api_table_type;
idx BINARY_INTEGER := 1;
PROCEDURE   ins(api_rec IN OUT api_row_type); 
PROCEDURE   upd(api_rec IN OUT api_row_type); 
PROCEDURE   del(api_rec IN api_row_type); 
PROCEDURE   insert_jn(api_rec IN api_row_type,operation IN VARCHAR2 DEFAULT 'INS' ); 
END api_TYPERABAIS;

/

CREATE SEQUENCE SEQ_CAN ;

CREATE SEQUENCE SEQ_CAT ;

CREATE SEQUENCE SEQ_COEC ;
CREATE SEQUENCE SEQ_CON ;

CREATE SEQUENCE SEQ_ECO ;

CREATE SEQUENCE SEQ_ETU ;

CREATE SEQUENCE SEQ_EVA ;

CREATE SEQUENCE SEQ_INCA ;

CREATE SEQUENCE SEQ_INLI ;

CREATE SEQUENCE SEQ_LOC ;

CREATE SEQUENCE SEQ_OFCAN ;

CREATE SEQUENCE SEQ_OFCAT ;

CREATE SEQUENCE SEQ_OFF ;

CREATE SEQUENCE SEQ_PRO ;

CREATE SEQUENCE SEQ_TRAB ;

CREATE TABLE CANTONS
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_CAN_NUMERO NOT NULL ,
    LIBELLE    VARCHAR2 (45) CONSTRAINT NN_CAN_LIBELLE NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
ALTER TABLE CANTONS ADD CONSTRAINT PK_CAN PRIMARY KEY ( NUMERO ) ;
ALTER TABLE CANTONS ADD CONSTRAINT UK_CAN_LIBELLE UNIQUE ( LIBELLE ) ;


CREATE TABLE CANTONS_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    LIBELLE      VARCHAR2 (45) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE CATEGORIES
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_CAT_NUMERO NOT NULL ,
    LIBELLE    VARCHAR2 (45) CONSTRAINT NN_CAT_LIBELLE NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
ALTER TABLE CATEGORIES ADD CONSTRAINT PK_CAT PRIMARY KEY ( NUMERO ) ;
ALTER TABLE CATEGORIES ADD CONSTRAINT UK_CAT_LIBELLE UNIQUE ( LIBELLE ) ;


CREATE TABLE CATEGORIES_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    LIBELLE      VARCHAR2 (45) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;
  
  
CREATE TABLE CONDITIONECOLES
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_COEC_NUMERO NOT NULL ,
    OFF_NUMERO NUMBER (38) CONSTRAINT NN_COEC_OFF_NUMERO NOT NULL ,
    ECO_NUMERO NUMBER (38) CONSTRAINT NN_COEC_ECO_NUMERO NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
CREATE INDEX IX_COEC_OFF_NUMERO ON CONDITIONECOLES
  ( OFF_NUMERO ASC
  ) ;
CREATE INDEX IX_COEC_ECO_NUMERO ON CONDITIONECOLES
  ( ECO_NUMERO ASC
  ) ;
ALTER TABLE CONDITIONECOLES ADD CONSTRAINT PK_COEC PRIMARY KEY ( NUMERO ) ;
ALTER TABLE CONDITIONECOLES ADD CONSTRAINT UK_COEC_ECO_NUMERO_OFF_NUMERO UNIQUE ( ECO_NUMERO , OFF_NUMERO ) ;


CREATE TABLE CONDITIONECOLES_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    OFF_NUMERO   NUMBER (38) ,
    ECO_NUMERO   NUMBER (38) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE CONDITIONS
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_CON_NUMERO NOT NULL ,
    LIBELLE    VARCHAR2 (320) CONSTRAINT NN_CON_LIBELLE NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
ALTER TABLE CONDITIONS ADD CONSTRAINT PK_CON PRIMARY KEY ( NUMERO ) ;


CREATE TABLE CONDITIONS_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    LIBELLE      VARCHAR2 (320) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE ECOLES
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_ECO_NUMERO NOT NULL ,
    LIBELLE    VARCHAR2 (125) CONSTRAINT NN_ECO_LIBELLE NOT NULL ,
    LOC_NUMERO NUMBER (38) ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
CREATE INDEX IX_ECO_LOC_NUMERO ON ECOLES
  ( LOC_NUMERO ASC
  ) ;
ALTER TABLE ECOLES ADD CONSTRAINT PK_ECO PRIMARY KEY ( NUMERO ) ;
ALTER TABLE ECOLES ADD CONSTRAINT UK_ECO_LIBELLE UNIQUE ( LIBELLE ) ;


CREATE TABLE ECOLES_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    LIBELLE      VARCHAR2 (125) ,
    LOC_NUMERO   NUMBER (38) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE ETUDIERS
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_ETU_NUMERO NOT NULL ,
    PRO_NUMERO NUMBER (38) CONSTRAINT NN_ETU_PRO_NUMERO NOT NULL ,
    ECO_NUMERO NUMBER (38) CONSTRAINT NN_ETU_ECO_NUMERO NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
CREATE INDEX IX_ETU_ECO_NUMERO ON ETUDIERS
  ( ECO_NUMERO ASC
  ) ;
CREATE INDEX IX_ETU_PRO_NUMERO ON ETUDIERS
  ( PRO_NUMERO ASC
  ) ;
ALTER TABLE ETUDIERS ADD CONSTRAINT PK_ETU PRIMARY KEY ( NUMERO ) ;
ALTER TABLE ETUDIERS ADD CONSTRAINT UK_ETU_PRO_NUMERO_ECO_NUMERO UNIQUE ( PRO_NUMERO , ECO_NUMERO ) ;


CREATE TABLE ETUDIERS_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    PRO_NUMERO   NUMBER (38) ,
    ECO_NUMERO   NUMBER (38) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE EVALUATIONS
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_EVA_NUMERO NOT NULL ,
    AIME       CHAR (1) ,
    PRO_NUMERO NUMBER (38) CONSTRAINT NN_EVA_PRO_NUMERO NOT NULL ,
    OFF_NUMERO NUMBER (38) CONSTRAINT NN_EVA_OFF_NUMERO NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
ALTER TABLE EVALUATIONS ADD CONSTRAINT CH_EVA_AIME CHECK ( AIME IN ('N', 'Y')) ;
CREATE INDEX IX_EVA_OFF_NUMERO ON EVALUATIONS
  ( OFF_NUMERO ASC
  ) ;
CREATE INDEX IX_EVA_PRO_NUMERO ON EVALUATIONS
  ( PRO_NUMERO ASC
  ) ;
ALTER TABLE EVALUATIONS ADD CONSTRAINT PK_EVA PRIMARY KEY ( NUMERO ) ;
ALTER TABLE EVALUATIONS ADD CONSTRAINT UK_EVA_PRO_NUMERO_OFF_NUMERO UNIQUE ( PRO_NUMERO , OFF_NUMERO ) ;


CREATE TABLE EVALUATIONS_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    AIME         CHAR (1) ,
    PRO_NUMERO   NUMBER (38) ,
    OFF_NUMERO   NUMBER (38) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE INTERETCATEGORIES
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_INCA_NUMERO NOT NULL ,
    PRO_NUMERO NUMBER (38) CONSTRAINT NN_INCA_PRO_NUMERO NOT NULL ,
    CAT_NUMERO NUMBER (38) CONSTRAINT NN_INCA_CAT_NUMERO NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
CREATE INDEX IX_INCA_PRO_NUMERO ON INTERETCATEGORIES
  ( PRO_NUMERO ASC
  ) ;
CREATE INDEX IX_INCA_CAT_NUMERO ON INTERETCATEGORIES
  ( CAT_NUMERO ASC
  ) ;
ALTER TABLE INTERETCATEGORIES ADD CONSTRAINT PK_INCA PRIMARY KEY ( NUMERO ) ;
ALTER TABLE INTERETCATEGORIES ADD CONSTRAINT UK_INCA_PRO_NUMERO_CAT_NUMERO UNIQUE ( PRO_NUMERO , CAT_NUMERO ) ;


CREATE TABLE INTERETCATEGORIES_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    PRO_NUMERO   NUMBER (38) ,
    CAT_NUMERO   NUMBER (38) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE INTERETLIEUX
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_INLI_NUMERO NOT NULL ,
    PRO_NUMERO NUMBER (38) CONSTRAINT NN_INLI_PRO_NUMERO NOT NULL ,
    CAN_NUMERO NUMBER (38) CONSTRAINT NN_INLI_CAN_NUMERO NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
CREATE INDEX IX_INLI_CAN_NUMERO ON INTERETLIEUX
  ( CAN_NUMERO ASC
  ) ;
CREATE INDEX IX_INLI_PRO_NUMERO ON INTERETLIEUX
  ( PRO_NUMERO ASC
  ) ;
ALTER TABLE INTERETLIEUX ADD CONSTRAINT PK_INLI PRIMARY KEY ( NUMERO ) ;
ALTER TABLE INTERETLIEUX ADD CONSTRAINT UK_INLI_PRO_NUMERO_CAN_NUMERO UNIQUE ( PRO_NUMERO , CAN_NUMERO ) ;


CREATE TABLE INTERETLIEUX_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    PRO_NUMERO   NUMBER (38) ,
    CAN_NUMERO   NUMBER (38) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE LOCALITES
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_LOC_NUMERO NOT NULL ,
    VILLE      VARCHAR2 (120) CONSTRAINT NN_LOC_VILLE NOT NULL ,
    NPA        VARCHAR2 (4) CONSTRAINT NN_LOC_NPA NOT NULL ,
    CAN_NUMERO NUMBER (38) ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
CREATE INDEX IX_LOC_CAN_NUMERO ON LOCALITES
  ( CAN_NUMERO ASC
  ) ;
ALTER TABLE LOCALITES ADD CONSTRAINT PK_LOC PRIMARY KEY ( NUMERO ) ;
ALTER TABLE LOCALITES ADD CONSTRAINT UK_LOC_VILLE_NPA UNIQUE ( VILLE , NPA ) ;


CREATE TABLE LOCALITES_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    VILLE        VARCHAR2 (120) ,
    NPA          VARCHAR2 (4) ,
    CAN_NUMERO   NUMBER (38) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE OFFRECANTONS
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_OFCAN_NUMERO NOT NULL ,
    OFF_NUMERO NUMBER (38) CONSTRAINT NN_OFCAN_OFF_NUMERO NOT NULL ,
    CAN_NUMERO NUMBER (38) CONSTRAINT NN_OFCAN_CAN_NUMERO NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
CREATE INDEX IX_OFCAN_CAN_NUMERO ON OFFRECANTONS
  ( CAN_NUMERO ASC
  ) ;
CREATE INDEX IX_OFCAN_OFF_NUMERO ON OFFRECANTONS
  ( OFF_NUMERO ASC
  ) ;
ALTER TABLE OFFRECANTONS ADD CONSTRAINT PK_OFCAN PRIMARY KEY ( NUMERO ) ;
ALTER TABLE OFFRECANTONS ADD CONSTRAINT UK_OFCAN_CAN_NUMERO_OFF_NUMERO UNIQUE ( CAN_NUMERO , OFF_NUMERO ) ;


CREATE TABLE OFFRECANTONS_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    OFF_NUMERO   NUMBER (38) ,
    CAN_NUMERO   NUMBER (38) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE OFFRECATEGORIES
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_OFCAT_NUMERO NOT NULL ,
    CAT_NUMERO NUMBER (38) CONSTRAINT NN_OFCAT_CAT_NUMERO NOT NULL ,
    OFF_NUMERO NUMBER (38) CONSTRAINT NN_OFCAT_OFF_NUMERO NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
CREATE INDEX IX_OFCAT_CAT_NUMERO ON OFFRECATEGORIES
  ( CAT_NUMERO ASC
  ) ;
CREATE INDEX IX_OFCAT_OFF_NUMERO ON OFFRECATEGORIES
  ( OFF_NUMERO ASC
  ) ;
ALTER TABLE OFFRECATEGORIES ADD CONSTRAINT PK_OFCAT PRIMARY KEY ( NUMERO ) ;
ALTER TABLE OFFRECATEGORIES ADD CONSTRAINT UK_OFCAT_CAT_NUMERO_OFF_NUMERO UNIQUE ( CAT_NUMERO , OFF_NUMERO ) ;


CREATE TABLE OFFRECATEGORIES_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    CAT_NUMERO   NUMBER (38) ,
    OFF_NUMERO   NUMBER (38) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;


CREATE TABLE OFFRES
  (
    NUMERO       NUMBER (38) CONSTRAINT NN_OFF_NUMERO NOT NULL ,
    LIBELLE      VARCHAR2 (45) CONSTRAINT NN_OFF_LIBELLE NOT NULL ,
    DESCRIPTION  VARCHAR2 (320) ,
    ORGANISATION VARCHAR2 (120) CONSTRAINT NN_OFF_ORGANISATION NOT NULL ,
    RUE          VARCHAR2 (120) ,
    NUMERORUE    VARCHAR2 (10) ,
    LIEN         VARCHAR2 (320) ,
    IMAGE BLOB ,
    DATEDEBUT   DATE ,
    DATEFIN     DATE ,
    ESTVALIDEE CHAR (1) CONSTRAINT NN_OFF_AETEVERIFIE NOT NULL ,
    CON_NUMERO  NUMBER (38) ,
    TRAB_NUMERO NUMBER (38) ,
    PRO_NUMERO  NUMBER (38) ,
    PRO_NUMERO2 NUMBER (38) ,
    CTRLAJUSER  VARCHAR2 (30) ,
    CTRLAJDATE  DATE ,
    CTRLMOUSER  VARCHAR2 (30) ,
    CTRLMODATE  DATE ,
	LOC_NUMERO  NUMBER (38) ,
    MONTANT     NUMBER (10,2)
  ) ;
ALTER TABLE OFFRES ADD CONSTRAINT CH_OFF_AETEVERIFIE CHECK ( AETEVERIFIE IN ('N', 'Y')) ;
ALTER TABLE OFFRES ADD CONSTRAINT CH_OFF_ESTVALIDEE CHECK ( ESTVALIDEE   IN ('N', 'Y')) ;
CREATE INDEX IX_OFF_PRO_NUMERO ON OFFRES
  ( PRO_NUMERO ASC
  ) ;
CREATE INDEX IX_OFF_CON_NUMERO ON OFFRES
  ( CON_NUMERO ASC
  ) ;
CREATE INDEX IX_OFF_TRAB_NUMERO ON OFFRES
  ( TRAB_NUMERO ASC
  ) ;
CREATE INDEX IX_OFF_PRO_NUMERO1 ON OFFRES
  ( PRO_NUMERO2 ASC
  ) ;
CREATE INDEX IX_OFF_LOC_NUMERO ON OFFRES
  ( LOC_NUMERO ASC
  ) ;
ALTER TABLE OFFRES ADD CONSTRAINT PK_OFF PRIMARY KEY ( NUMERO ) ;
ALTER TABLE OFFRES ADD CONSTRAINT UK_OFF_LIBELLE UNIQUE ( LIBELLE ) ;


CREATE TABLE OFFRES_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    LIBELLE      VARCHAR2 (45) ,
    DESCRIPTION  VARCHAR2 (320) ,
    ORGANISATION VARCHAR2 (120) ,
    RUE          VARCHAR2 (120) ,
    NUMERORUE    VARCHAR2 (10) ,
    LIEN         VARCHAR2 (320) ,
    IMAGE BLOB ,
    DATEDEBUT   DATE ,
    DATEFIN     DATE ,
    ESTVALIDEE  CHAR (1) ,
    CON_NUMERO  NUMBER (38) ,
    TRAB_NUMERO NUMBER (38) ,
    PRO_NUMERO  NUMBER (38) ,
    PRO_NUMERO2 NUMBER (38) ,
    CTRLAJUSER  VARCHAR2 (30) ,
    CTRLAJDATE  DATE ,
    CTRLMOUSER  VARCHAR2 (30) ,
    CTRLMODATE  DATE ,
    LOC_NUMERO  NUMBER (38) ,
    MONTANT     NUMBER (10,2)
  ) ;


CREATE TABLE PROFILS
  (
    NUMERO        NUMBER (38) CONSTRAINT NN_PRO_NUMERO NOT NULL ,
    EMAIL         VARCHAR2 (120) CONSTRAINT NN_PRO_EMAIL NOT NULL ,
    MOTDEPASSE    VARCHAR2 (25) CONSTRAINT NN_PRO_MOTDEPASSE NOT NULL ,
    PRENOM        VARCHAR2 (45) CONSTRAINT NN_PRO_PRENOM NOT NULL ,
    NOM           VARCHAR2 (45) CONSTRAINT NN_PRO_NOM NOT NULL ,
    DATENAISSANCE DATE CONSTRAINT NN_PRO_DATENAISSANCE NOT NULL ,
    SEXE          CHAR (1) CONSTRAINT NN_PRO_SEXE NOT NULL ,
    NOTIFICATION  CHAR (1) DEFAULT 'Y' ,
    ADMIN         NUMBER (1) CONSTRAINT NN_PRO_ADMIN NOT NULL ,
    CTRLAJUSER    VARCHAR2 (30) ,
    CTRLAJDATE    DATE ,
    CTRLMOUSER    VARCHAR2 (30) ,
    CTRLMODATE    DATE
  ) ;
ALTER TABLE PROFILS ADD CONSTRAINT CH_PRO_SEXE CHECK ( SEXE                 IN ('N', 'Y')) ;
ALTER TABLE PROFILS ADD CONSTRAINT CH_PRO_NOTIFICATION CHECK ( NOTIFICATION IN ('N', 'Y')) ;
ALTER TABLE PROFILS ADD CONSTRAINT PK_PRO PRIMARY KEY ( NUMERO ) ;
ALTER TABLE PROFILS ADD CONSTRAINT UK_PRO_EMAIL UNIQUE ( EMAIL ) ;


CREATE TABLE PROFILS_JN
  (
    JN_OPERATION  CHAR (3) ,
    JN_USER       CHAR (30) ,
    JN_DATETIME   DATE ,
    JN_SESSION    NUMBER (38) ,
    JN_APPLN      VARCHAR2 (30) ,
    NUMERO        NUMBER (38) ,
    EMAIL         VARCHAR2 (120) ,
    MOTDEPASSE    VARCHAR2 (25) ,
    PRENOM        VARCHAR2 (45) ,
    NOM           VARCHAR2 (45) ,
    DATENAISSANCE DATE ,
    SEXE          CHAR (1) ,
    NOTIFICATION  CHAR (1) ,
    ADMIN         NUMBER (1) ,
    CTRLAJUSER    VARCHAR2 (30) ,
    CTRLAJDATE    DATE ,
    CTRLMOUSER    VARCHAR2 (30) ,
    CTRLMODATE    DATE
  ) ;
  
CREATE TABLE TYPERABAIS
  (
    NUMERO     NUMBER (38) CONSTRAINT NN_TRAB_NUMERO NOT NULL ,
    LIBELLE    VARCHAR2 (120) CONSTRAINT NN_TRAB_LIBELLE NOT NULL ,
    CTRLAJUSER VARCHAR2 (30) ,
    CTRLAJDATE DATE ,
    CTRLMOUSER VARCHAR2 (30) ,
    CTRLMODATE DATE
  ) ;
  
ALTER TABLE TYPERABAIS ADD CONSTRAINT PK_TRAB PRIMARY KEY ( NUMERO ) ;
ALTER TABLE TYPERABAIS ADD CONSTRAINT UK_TRAB_LIBELLE UNIQUE ( LIBELLE ) ;


CREATE TABLE TYPERABAIS_JN
  (
    JN_OPERATION CHAR (3) ,
    JN_USER      CHAR (30) ,
    JN_DATETIME  DATE ,
    JN_SESSION   NUMBER (38) ,
    JN_APPLN     VARCHAR2 (30) ,
    NUMERO       NUMBER (38) ,
    LIBELLE      VARCHAR2 (120) ,
    CTRLAJUSER   VARCHAR2 (30) ,
    CTRLAJDATE   DATE ,
    CTRLMOUSER   VARCHAR2 (30) ,
    CTRLMODATE   DATE
  ) ;

ALTER TABLE CONDITIONECOLES ADD CONSTRAINT FK_COEC_ECO FOREIGN KEY ( ECO_NUMERO ) REFERENCES ECOLES ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE CONDITIONECOLES ADD CONSTRAINT FK_COEC_OFF FOREIGN KEY ( OFF_NUMERO ) REFERENCES OFFRES ( NUMERO ) NOT DEFERRABLE ;																														   
ALTER TABLE ECOLES ADD CONSTRAINT FK_ECO_LOC FOREIGN KEY ( LOC_NUMERO ) REFERENCES LOCALITES ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE ETUDIERS ADD CONSTRAINT FK_ETU_ECO FOREIGN KEY ( ECO_NUMERO ) REFERENCES ECOLES ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE ETUDIERS ADD CONSTRAINT FK_ETU_PRO FOREIGN KEY ( PRO_NUMERO ) REFERENCES PROFILS ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE EVALUATIONS ADD CONSTRAINT FK_EVA_OFF FOREIGN KEY ( OFF_NUMERO ) REFERENCES OFFRES ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE EVALUATIONS ADD CONSTRAINT FK_EVA_PRO FOREIGN KEY ( PRO_NUMERO ) REFERENCES PROFILS ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE INTERETCATEGORIES ADD CONSTRAINT FK_INCA_CAT FOREIGN KEY ( CAT_NUMERO ) REFERENCES CATEGORIES ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE INTERETCATEGORIES ADD CONSTRAINT FK_INCA_PRO FOREIGN KEY ( PRO_NUMERO ) REFERENCES PROFILS ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE INTERETLIEUX ADD CONSTRAINT FK_INLI_CAN FOREIGN KEY ( CAN_NUMERO ) REFERENCES CANTONS ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE INTERETLIEUX ADD CONSTRAINT FK_INLI_PRO FOREIGN KEY ( PRO_NUMERO ) REFERENCES PROFILS ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE LOCALITES ADD CONSTRAINT FK_LOC_CAN FOREIGN KEY ( CAN_NUMERO ) REFERENCES CANTONS ( NUMERO ) ON
DELETE CASCADE NOT DEFERRABLE ;

ALTER TABLE OFFRECANTONS ADD CONSTRAINT FK_OFCAN_CAN FOREIGN KEY ( CAN_NUMERO ) REFERENCES CANTONS ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE OFFRECANTONS ADD CONSTRAINT FK_OFCAN_OFF FOREIGN KEY ( OFF_NUMERO ) REFERENCES OFFRES ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE OFFRECATEGORIES ADD CONSTRAINT FK_OFCAT_CAT FOREIGN KEY ( CAT_NUMERO ) REFERENCES CATEGORIES ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE OFFRECATEGORIES ADD CONSTRAINT FK_OFCAT_OFF FOREIGN KEY ( OFF_NUMERO ) REFERENCES OFFRES ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE OFFRES ADD CONSTRAINT FK_OFF_CON FOREIGN KEY ( CON_NUMERO ) REFERENCES CONDITIONS ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE OFFRES ADD CONSTRAINT FK_OFF_PRO FOREIGN KEY ( PRO_NUMERO ) REFERENCES PROFILS ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE OFFRES ADD CONSTRAINT FK_OFF_PROv2 FOREIGN KEY ( PRO_NUMERO2 ) REFERENCES PROFILS ( NUMERO ) NOT DEFERRABLE ;

ALTER TABLE OFFRES ADD CONSTRAINT FK_OFF_TRAB FOREIGN KEY ( TRAB_NUMERO ) REFERENCES TYPERABAIS ( NUMERO ) NOT DEFERRABLE ;


CREATE OR REPLACE TRIGGER API_ADR_CAN 
    AFTER DELETE ON CANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_CANTONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_CAT 
    AFTER DELETE ON CATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_CATEGORIES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_COEC 
    AFTER DELETE ON CONDITIONECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONECOLES.api_row_type;
BEGIN




NULL;




END; 
/


CREATE OR REPLACE TRIGGER API_ADR_CON 
    AFTER DELETE ON CONDITIONS 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_ECO 
    AFTER DELETE ON ECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_ECOLES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_ETU 
    AFTER DELETE ON ETUDIERS 
    FOR EACH ROW 
DECLARE
api_rec API_ETUDIERS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_EVA 
    AFTER DELETE ON EVALUATIONS 
    FOR EACH ROW 
DECLARE
api_rec API_EVALUATIONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_INCA 
    AFTER DELETE ON INTERETCATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETCATEGORIES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_INLI 
    AFTER DELETE ON INTERETLIEUX 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETLIEUX.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_LOC 
    AFTER DELETE ON LOCALITES 
    FOR EACH ROW 
DECLARE
api_rec API_LOCALITES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_OFCAN 
    AFTER DELETE ON OFFRECANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECANTONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_OFCAT 
    AFTER DELETE ON OFFRECATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECATEGORIES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_OFF 
    AFTER DELETE ON OFFRES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_ADR_PRO 
    AFTER DELETE ON PROFILS 
    FOR EACH ROW 
DECLARE
api_rec API_PROFILS.api_row_type;
BEGIN




NULL;




END; 
/




CREATE OR REPLACE TRIGGER API_ADR_TRAB 
    AFTER DELETE ON TYPERABAIS 
    FOR EACH ROW 
DECLARE
api_rec API_TYPERABAIS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_CAN 
    AFTER INSERT ON CANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_CANTONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_CAT 
    AFTER INSERT ON CATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_CATEGORIES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_COEC 
    AFTER INSERT ON CONDITIONECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONECOLES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_CON 
    AFTER INSERT ON CONDITIONS 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_ECO 
    AFTER INSERT ON ECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_ECOLES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_ETU 
    AFTER INSERT ON ETUDIERS 
    FOR EACH ROW 
DECLARE
api_rec API_ETUDIERS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_EVA 
    AFTER INSERT ON EVALUATIONS 
    FOR EACH ROW 
DECLARE
api_rec API_EVALUATIONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_INCA 
    AFTER INSERT ON INTERETCATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETCATEGORIES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_INLI 
    AFTER INSERT ON INTERETLIEUX 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETLIEUX.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_LOC 
    AFTER INSERT ON LOCALITES 
    FOR EACH ROW 
DECLARE
api_rec API_LOCALITES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_OFCAN 
    AFTER INSERT ON OFFRECANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECANTONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_OFCAT 
    AFTER INSERT ON OFFRECATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECATEGORIES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_OFF 
    AFTER INSERT ON OFFRES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AIR_PRO 
    AFTER INSERT ON PROFILS 
    FOR EACH ROW 
DECLARE
api_rec API_PROFILS.api_row_type;
BEGIN




NULL;




END; 
/


CREATE OR REPLACE TRIGGER API_AIR_TRAB 
    AFTER INSERT ON TYPERABAIS 
    FOR EACH ROW 
DECLARE
api_rec API_TYPERABAIS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_CAN 
    AFTER UPDATE ON CANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_CANTONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_CAT 
    AFTER UPDATE ON CATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_CATEGORIES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_COEC 
    AFTER UPDATE ON CONDITIONECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONECOLES.api_row_type;
BEGIN




NULL;




END; 
/




CREATE OR REPLACE TRIGGER API_AUR_CON 
    AFTER UPDATE ON CONDITIONS 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_ECO 
    AFTER UPDATE ON ECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_ECOLES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_ETU 
    AFTER UPDATE ON ETUDIERS 
    FOR EACH ROW 
DECLARE
api_rec API_ETUDIERS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_EVA 
    AFTER UPDATE ON EVALUATIONS 
    FOR EACH ROW 
DECLARE
api_rec API_EVALUATIONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_INCA 
    AFTER UPDATE ON INTERETCATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETCATEGORIES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_INLI 
    AFTER UPDATE ON INTERETLIEUX 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETLIEUX.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_LOC 
    AFTER UPDATE ON LOCALITES 
    FOR EACH ROW 
DECLARE
api_rec API_LOCALITES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_OFCAN 
    AFTER UPDATE ON OFFRECANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECANTONS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_OFCAT 
    AFTER UPDATE ON OFFRECATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECATEGORIES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_OFF 
    AFTER UPDATE ON OFFRES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRES.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_AUR_PRO 
    AFTER UPDATE ON PROFILS 
    FOR EACH ROW 
DECLARE
api_rec API_PROFILS.api_row_type;
BEGIN




NULL;




END; 
/


CREATE OR REPLACE TRIGGER API_AUR_TRAB 
    AFTER UPDATE ON TYPERABAIS 
    FOR EACH ROW 
DECLARE
api_rec API_TYPERABAIS.api_row_type;
BEGIN




NULL;




END; 
/



CREATE OR REPLACE TRIGGER API_BDR_CAN 
    BEFORE DELETE ON CANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_CANTONS.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.LIBELLE := :OLD.LIBELLE;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_CANTONS.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_CAT 
    BEFORE DELETE ON CATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_CATEGORIES.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.LIBELLE := :OLD.LIBELLE;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_CATEGORIES.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_COEC 
    BEFORE DELETE ON CONDITIONECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONECOLES.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.OFF_NUMERO := :OLD.OFF_NUMERO;
api_rec.ECO_NUMERO := :OLD.ECO_NUMERO;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_CONDITIONECOLES.del(api_rec);





END; 
/


CREATE OR REPLACE TRIGGER API_BDR_CON 
    BEFORE DELETE ON CONDITIONS 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONS.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.LIBELLE := :OLD.LIBELLE;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_CONDITIONS.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_ECO 
    BEFORE DELETE ON ECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_ECOLES.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.LIBELLE := :OLD.LIBELLE;
api_rec.LOC_NUMERO := :OLD.LOC_NUMERO;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_ECOLES.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_ETU 
    BEFORE DELETE ON ETUDIERS 
    FOR EACH ROW 
DECLARE
api_rec API_ETUDIERS.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.PRO_NUMERO := :OLD.PRO_NUMERO;
api_rec.ECO_NUMERO := :OLD.ECO_NUMERO;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_ETUDIERS.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_EVA 
    BEFORE DELETE ON EVALUATIONS 
    FOR EACH ROW 
DECLARE
api_rec API_EVALUATIONS.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.AIME := :OLD.AIME;
api_rec.PRO_NUMERO := :OLD.PRO_NUMERO;
api_rec.OFF_NUMERO := :OLD.OFF_NUMERO;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_EVALUATIONS.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_INCA 
    BEFORE DELETE ON INTERETCATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETCATEGORIES.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.PRO_NUMERO := :OLD.PRO_NUMERO;
api_rec.CAT_NUMERO := :OLD.CAT_NUMERO;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_INTERETCATEGORIES.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_INLI 
    BEFORE DELETE ON INTERETLIEUX 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETLIEUX.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.PRO_NUMERO := :OLD.PRO_NUMERO;
api_rec.CAN_NUMERO := :OLD.CAN_NUMERO;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_INTERETLIEUX.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_LOC 
    BEFORE DELETE ON LOCALITES 
    FOR EACH ROW 
DECLARE
api_rec API_LOCALITES.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.VILLE := :OLD.VILLE;
api_rec.NPA := :OLD.NPA;
api_rec.CAN_NUMERO := :OLD.CAN_NUMERO;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_LOCALITES.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_OFCAN 
    BEFORE DELETE ON OFFRECANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECANTONS.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.OFF_NUMERO := :OLD.OFF_NUMERO;
api_rec.CAN_NUMERO := :OLD.CAN_NUMERO;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_OFFRECANTONS.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_OFCAT 
    BEFORE DELETE ON OFFRECATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECATEGORIES.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.CAT_NUMERO := :OLD.CAT_NUMERO;
api_rec.OFF_NUMERO := :OLD.OFF_NUMERO;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_OFFRECATEGORIES.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_OFF 
    BEFORE DELETE ON OFFRES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRES.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.LIBELLE := :OLD.LIBELLE;
api_rec.DESCRIPTION := :OLD.DESCRIPTION;
api_rec.ORGANISATION := :OLD.ORGANISATION;
api_rec.RUE := :OLD.RUE;
api_rec.NUMERORUE := :OLD.NUMERORUE;
api_rec.LIEN := :OLD.LIEN;
api_rec.IMAGE := :OLD.IMAGE;
api_rec.DATEDEBUT := :OLD.DATEDEBUT;
api_rec.DATEFIN := :OLD.DATEFIN;
api_rec.ESTVALIDEE := :OLD.ESTVALIDEE;
api_rec.CON_NUMERO := :OLD.CON_NUMERO;
api_rec.TRAB_NUMERO := :OLD.TRAB_NUMERO;
api_rec.PRO_NUMERO := :OLD.PRO_NUMERO;
api_rec.PRO_NUMERO2 := :OLD.PRO_NUMERO2;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;
api_rec.LOC_NUMERO := :OLD.LOC_NUMERO;
api_rec.MONTANT := :OLD.MONTANT;							

API_OFFRES.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_PRO 
    BEFORE DELETE ON PROFILS 
    FOR EACH ROW 
DECLARE
api_rec API_PROFILS.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.EMAIL := :OLD.EMAIL;
api_rec.MOTDEPASSE := :OLD.MOTDEPASSE;
api_rec.PRENOM := :OLD.PRENOM;
api_rec.NOM := :OLD.NOM;
api_rec.DATENAISSANCE := :OLD.DATENAISSANCE;
api_rec.SEXE := :OLD.SEXE;
api_rec.NOTIFICATION := :OLD.NOTIFICATION;
api_rec.ADMIN := :OLD.ADMIN;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_PROFILS.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BDR_TRAB 
    BEFORE DELETE ON TYPERABAIS 
    FOR EACH ROW 
DECLARE
api_rec API_TYPERABAIS.api_row_type;
BEGIN



api_rec.NUMERO := :OLD.NUMERO;
api_rec.LIBELLE := :OLD.LIBELLE;
api_rec.CTRLAJUSER := :OLD.CTRLAJUSER;
api_rec.CTRLAJDATE := :OLD.CTRLAJDATE;
api_rec.CTRLMOUSER := :OLD.CTRLMOUSER;
api_rec.CTRLMODATE := :OLD.CTRLMODATE;

API_TYPERABAIS.del(api_rec);





END; 
/



CREATE OR REPLACE TRIGGER API_BIR_CAN 
    BEFORE INSERT ON CANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_CANTONS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_CANTONS.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_CAT 
    BEFORE INSERT ON CATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_CATEGORIES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_CATEGORIES.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_COEC 
    BEFORE INSERT ON CONDITIONECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONECOLES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.OFF_NUMERO := :NEW.OFF_NUMERO;
api_rec.ECO_NUMERO := :NEW.ECO_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_CONDITIONECOLES.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.OFF_NUMERO :=api_rec.OFF_NUMERO;
:new.ECO_NUMERO :=api_rec.ECO_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/


CREATE OR REPLACE TRIGGER API_BIR_CON 
    BEFORE INSERT ON CONDITIONS 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_CONDITIONS.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_ECO 
    BEFORE INSERT ON ECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_ECOLES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.LOC_NUMERO := :NEW.LOC_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_ECOLES.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.LOC_NUMERO :=api_rec.LOC_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_ETU 
    BEFORE INSERT ON ETUDIERS 
    FOR EACH ROW 
DECLARE
api_rec API_ETUDIERS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.ECO_NUMERO := :NEW.ECO_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_ETUDIERS.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.ECO_NUMERO :=api_rec.ECO_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_EVA 
    BEFORE INSERT ON EVALUATIONS 
    FOR EACH ROW 
DECLARE
api_rec API_EVALUATIONS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.AIME := :NEW.AIME;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.OFF_NUMERO := :NEW.OFF_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_EVALUATIONS.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.AIME :=api_rec.AIME;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.OFF_NUMERO :=api_rec.OFF_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_INCA 
    BEFORE INSERT ON INTERETCATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETCATEGORIES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.CAT_NUMERO := :NEW.CAT_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_INTERETCATEGORIES.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.CAT_NUMERO :=api_rec.CAT_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_INLI 
    BEFORE INSERT ON INTERETLIEUX 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETLIEUX.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.CAN_NUMERO := :NEW.CAN_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_INTERETLIEUX.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.CAN_NUMERO :=api_rec.CAN_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_LOC 
    BEFORE INSERT ON LOCALITES 
    FOR EACH ROW 
DECLARE
api_rec API_LOCALITES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.VILLE := :NEW.VILLE;
api_rec.NPA := :NEW.NPA;
api_rec.CAN_NUMERO := :NEW.CAN_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_LOCALITES.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.VILLE :=api_rec.VILLE;
:new.NPA :=api_rec.NPA;
:new.CAN_NUMERO :=api_rec.CAN_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_OFCAN 
    BEFORE INSERT ON OFFRECANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECANTONS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.OFF_NUMERO := :NEW.OFF_NUMERO;
api_rec.CAN_NUMERO := :NEW.CAN_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_OFFRECANTONS.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.OFF_NUMERO :=api_rec.OFF_NUMERO;
:new.CAN_NUMERO :=api_rec.CAN_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_OFCAT 
    BEFORE INSERT ON OFFRECATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECATEGORIES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.CAT_NUMERO := :NEW.CAT_NUMERO;
api_rec.OFF_NUMERO := :NEW.OFF_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_OFFRECATEGORIES.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.CAT_NUMERO :=api_rec.CAT_NUMERO;
:new.OFF_NUMERO :=api_rec.OFF_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_OFF 
    BEFORE INSERT ON OFFRES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.DESCRIPTION := :NEW.DESCRIPTION;
api_rec.ORGANISATION := :NEW.ORGANISATION;
api_rec.RUE := :NEW.RUE;
api_rec.NUMERORUE := :NEW.NUMERORUE;
api_rec.LIEN := :NEW.LIEN;
api_rec.IMAGE := :NEW.IMAGE;
api_rec.DATEDEBUT := :NEW.DATEDEBUT;
api_rec.DATEFIN := :NEW.DATEFIN;
api_rec.ESTVALIDEE := :NEW.ESTVALIDEE;
api_rec.CON_NUMERO := :NEW.CON_NUMERO;
api_rec.TRAB_NUMERO := :NEW.TRAB_NUMERO;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.PRO_NUMERO2 := :NEW.PRO_NUMERO2;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;
api_rec.LOC_NUMERO := :NEW.LOC_NUMERO;
api_rec.MONTANT := :NEW.MONTANT;							

API_OFFRES.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.DESCRIPTION :=api_rec.DESCRIPTION;
:new.ORGANISATION :=api_rec.ORGANISATION;
:new.RUE :=api_rec.RUE;
:new.NUMERORUE :=api_rec.NUMERORUE;
:new.LIEN :=api_rec.LIEN;
:new.IMAGE :=api_rec.IMAGE;
:new.DATEDEBUT :=api_rec.DATEDEBUT;
:new.DATEFIN :=api_rec.DATEFIN;
:new.ESTVALIDEE :=api_rec.ESTVALIDEE;
:new.CON_NUMERO :=api_rec.CON_NUMERO;
:new.TRAB_NUMERO :=api_rec.TRAB_NUMERO;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.PRO_NUMERO2 :=api_rec.PRO_NUMERO2;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;
:new.LOC_NUMERO :=api_rec.LOC_NUMERO;
:new.MONTANT :=api_rec.MONTANT;							   




END; 
/



CREATE OR REPLACE TRIGGER API_BIR_PRO 
    BEFORE INSERT ON PROFILS 
    FOR EACH ROW 
DECLARE
api_rec API_PROFILS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.EMAIL := :NEW.EMAIL;
api_rec.MOTDEPASSE := :NEW.MOTDEPASSE;
api_rec.PRENOM := :NEW.PRENOM;
api_rec.NOM := :NEW.NOM;
api_rec.DATENAISSANCE := :NEW.DATENAISSANCE;
api_rec.SEXE := :NEW.SEXE;
api_rec.NOTIFICATION := :NEW.NOTIFICATION;
api_rec.ADMIN := :NEW.ADMIN;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_PROFILS.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.EMAIL :=api_rec.EMAIL;
:new.MOTDEPASSE :=api_rec.MOTDEPASSE;
:new.PRENOM :=api_rec.PRENOM;
:new.NOM :=api_rec.NOM;
:new.DATENAISSANCE :=api_rec.DATENAISSANCE;
:new.SEXE :=api_rec.SEXE;
:new.NOTIFICATION :=api_rec.NOTIFICATION;
:new.ADMIN :=api_rec.ADMIN;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/




CREATE OR REPLACE TRIGGER API_BIR_TRAB 
    BEFORE INSERT ON TYPERABAIS 
    FOR EACH ROW 
DECLARE
api_rec API_TYPERABAIS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_TYPERABAIS.ins(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_CAN 
    BEFORE UPDATE ON CANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_CANTONS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_CANTONS.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_CAT 
    BEFORE UPDATE ON CATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_CATEGORIES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_CATEGORIES.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_COEC 
    BEFORE UPDATE ON CONDITIONECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONECOLES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.OFF_NUMERO := :NEW.OFF_NUMERO;
api_rec.ECO_NUMERO := :NEW.ECO_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_CONDITIONECOLES.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.OFF_NUMERO :=api_rec.OFF_NUMERO;
:new.ECO_NUMERO :=api_rec.ECO_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/


CREATE OR REPLACE TRIGGER API_BUR_CON 
    BEFORE UPDATE ON CONDITIONS 
    FOR EACH ROW 
DECLARE
api_rec API_CONDITIONS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_CONDITIONS.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_ECO 
    BEFORE UPDATE ON ECOLES 
    FOR EACH ROW 
DECLARE
api_rec API_ECOLES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.LOC_NUMERO := :NEW.LOC_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_ECOLES.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.LOC_NUMERO :=api_rec.LOC_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_ETU 
    BEFORE UPDATE ON ETUDIERS 
    FOR EACH ROW 
DECLARE
api_rec API_ETUDIERS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.ECO_NUMERO := :NEW.ECO_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_ETUDIERS.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.ECO_NUMERO :=api_rec.ECO_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_EVA 
    BEFORE UPDATE ON EVALUATIONS 
    FOR EACH ROW 
DECLARE
api_rec API_EVALUATIONS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.AIME := :NEW.AIME;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.OFF_NUMERO := :NEW.OFF_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_EVALUATIONS.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.AIME :=api_rec.AIME;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.OFF_NUMERO :=api_rec.OFF_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_INCA 
    BEFORE UPDATE ON INTERETCATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETCATEGORIES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.CAT_NUMERO := :NEW.CAT_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_INTERETCATEGORIES.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.CAT_NUMERO :=api_rec.CAT_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_INLI 
    BEFORE UPDATE ON INTERETLIEUX 
    FOR EACH ROW 
DECLARE
api_rec API_INTERETLIEUX.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.CAN_NUMERO := :NEW.CAN_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_INTERETLIEUX.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.CAN_NUMERO :=api_rec.CAN_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_LOC 
    BEFORE UPDATE ON LOCALITES 
    FOR EACH ROW 
DECLARE
api_rec API_LOCALITES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.VILLE := :NEW.VILLE;
api_rec.NPA := :NEW.NPA;
api_rec.CAN_NUMERO := :NEW.CAN_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_LOCALITES.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.VILLE :=api_rec.VILLE;
:new.NPA :=api_rec.NPA;
:new.CAN_NUMERO :=api_rec.CAN_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_OFCAN 
    BEFORE UPDATE ON OFFRECANTONS 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECANTONS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.OFF_NUMERO := :NEW.OFF_NUMERO;
api_rec.CAN_NUMERO := :NEW.CAN_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_OFFRECANTONS.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.OFF_NUMERO :=api_rec.OFF_NUMERO;
:new.CAN_NUMERO :=api_rec.CAN_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_OFCAT 
    BEFORE UPDATE ON OFFRECATEGORIES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRECATEGORIES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.CAT_NUMERO := :NEW.CAT_NUMERO;
api_rec.OFF_NUMERO := :NEW.OFF_NUMERO;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_OFFRECATEGORIES.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.CAT_NUMERO :=api_rec.CAT_NUMERO;
:new.OFF_NUMERO :=api_rec.OFF_NUMERO;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_OFF 
    BEFORE UPDATE ON OFFRES 
    FOR EACH ROW 
DECLARE
api_rec API_OFFRES.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.DESCRIPTION := :NEW.DESCRIPTION;
api_rec.ORGANISATION := :NEW.ORGANISATION;
api_rec.RUE := :NEW.RUE;
api_rec.NUMERORUE := :NEW.NUMERORUE;
api_rec.LIEN := :NEW.LIEN;
api_rec.IMAGE := :NEW.IMAGE;
api_rec.DATEDEBUT := :NEW.DATEDEBUT;
api_rec.DATEFIN := :NEW.DATEFIN;
api_rec.ESTVALIDEE := :NEW.ESTVALIDEE;
api_rec.CON_NUMERO := :NEW.CON_NUMERO;
api_rec.TRAB_NUMERO := :NEW.TRAB_NUMERO;
api_rec.PRO_NUMERO := :NEW.PRO_NUMERO;
api_rec.PRO_NUMERO2 := :NEW.PRO_NUMERO2;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;
api_rec.LOC_NUMERO := :NEW.LOC_NUMERO;
api_rec.MONTANT := :NEW.MONTANT;							

API_OFFRES.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.DESCRIPTION :=api_rec.DESCRIPTION;
:new.ORGANISATION :=api_rec.ORGANISATION;
:new.RUE :=api_rec.RUE;
:new.NUMERORUE :=api_rec.NUMERORUE;
:new.LIEN :=api_rec.LIEN;
:new.IMAGE :=api_rec.IMAGE;
:new.DATEDEBUT :=api_rec.DATEDEBUT;
:new.DATEFIN :=api_rec.DATEFIN;
:new.ESTVALIDEE :=api_rec.ESTVALIDEE;
:new.CON_NUMERO :=api_rec.CON_NUMERO;
:new.TRAB_NUMERO :=api_rec.TRAB_NUMERO;
:new.PRO_NUMERO :=api_rec.PRO_NUMERO;
:new.PRO_NUMERO2 :=api_rec.PRO_NUMERO2;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;
:new.LOC_NUMERO :=api_rec.LOC_NUMERO;
:new.MONTANT :=api_rec.MONTANT;							   




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_PRO 
    BEFORE UPDATE ON PROFILS 
    FOR EACH ROW 
DECLARE
api_rec API_PROFILS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.EMAIL := :NEW.EMAIL;
api_rec.MOTDEPASSE := :NEW.MOTDEPASSE;
api_rec.PRENOM := :NEW.PRENOM;
api_rec.NOM := :NEW.NOM;
api_rec.DATENAISSANCE := :NEW.DATENAISSANCE;
api_rec.SEXE := :NEW.SEXE;
api_rec.NOTIFICATION := :NEW.NOTIFICATION;
api_rec.ADMIN := :NEW.ADMIN;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_PROFILS.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.EMAIL :=api_rec.EMAIL;
:new.MOTDEPASSE :=api_rec.MOTDEPASSE;
:new.PRENOM :=api_rec.PRENOM;
:new.NOM :=api_rec.NOM;
:new.DATENAISSANCE :=api_rec.DATENAISSANCE;
:new.SEXE :=api_rec.SEXE;
:new.NOTIFICATION :=api_rec.NOTIFICATION;
:new.ADMIN :=api_rec.ADMIN;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE TRIGGER API_BUR_TRAB 
    BEFORE UPDATE ON TYPERABAIS 
    FOR EACH ROW 
DECLARE
api_rec API_TYPERABAIS.api_row_type;
BEGIN



api_rec.NUMERO := :NEW.NUMERO;
api_rec.LIBELLE := :NEW.LIBELLE;
api_rec.CTRLAJUSER := :NEW.CTRLAJUSER;
api_rec.CTRLAJDATE := :NEW.CTRLAJDATE;
api_rec.CTRLMOUSER := :NEW.CTRLMOUSER;
api_rec.CTRLMODATE := :NEW.CTRLMODATE;

API_TYPERABAIS.upd(api_rec);

:new.NUMERO :=api_rec.NUMERO;
:new.LIBELLE :=api_rec.LIBELLE;
:new.CTRLAJUSER :=api_rec.CTRLAJUSER;
:new.CTRLAJDATE :=api_rec.CTRLAJDATE;
:new.CTRLMOUSER :=api_rec.CTRLMOUSER;
:new.CTRLMODATE :=api_rec.CTRLMODATE;




END; 
/



CREATE OR REPLACE PACKAGE BODY API_CANTONS
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_CAN.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CANTONS');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CANTONS');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CANTONS');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO CANTONS_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        LIBELLE,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.LIBELLE,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CANTONS');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_CATEGORIES
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_CAT.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CATEGORIES');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CATEGORIES');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CATEGORIES');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO CATEGORIES_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        LIBELLE,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.LIBELLE,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CATEGORIES');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_CONDITIONECOLES
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_COEC.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CONDITIONECOLES');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CONDITIONECOLES');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CONDITIONECOLES');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO CONDITIONECOLES_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        OFF_NUMERO,
        ECO_NUMERO,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.OFF_NUMERO,
        api_rec.ECO_NUMERO,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CONDITIONECOLES');
  END insert_jn;
END;
/
CREATE OR REPLACE PACKAGE BODY API_CONDITIONS
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_CON.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CONDITIONS');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CONDITIONS');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CONDITIONS');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO CONDITIONS_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        LIBELLE,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.LIBELLE,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_CONDITIONS');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_ECOLES
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_ECO.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_ECOLES');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_ECOLES');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_ECOLES');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO ECOLES_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        LIBELLE,
        LOC_NUMERO,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.LIBELLE,
        api_rec.LOC_NUMERO,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_ECOLES');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_ETUDIERS
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_ETU.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_ETUDIERS');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_ETUDIERS');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_ETUDIERS');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO ETUDIERS_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        PRO_NUMERO,
        ECO_NUMERO,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.PRO_NUMERO,
        api_rec.ECO_NUMERO,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_ETUDIERS');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_EVALUATIONS
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_EVA.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_EVALUATIONS');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_EVALUATIONS');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_EVALUATIONS');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO EVALUATIONS_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        AIME,
        PRO_NUMERO,
        OFF_NUMERO,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.AIME,
        api_rec.PRO_NUMERO,
        api_rec.OFF_NUMERO,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_EVALUATIONS');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_INTERETCATEGORIES
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_INCA.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_INTERETCATEGORIES');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_INTERETCATEGORIES');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_INTERETCATEGORIES');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO INTERETCATEGORIES_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        PRO_NUMERO,
        CAT_NUMERO,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.PRO_NUMERO,
        api_rec.CAT_NUMERO,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_INTERETCATEGORIES');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_INTERETLIEUX
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_INLI.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_INTERETLIEUX');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_INTERETLIEUX');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_INTERETLIEUX');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO INTERETLIEUX_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        PRO_NUMERO,
        CAN_NUMERO,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.PRO_NUMERO,
        api_rec.CAN_NUMERO,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_INTERETLIEUX');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_LOCALITES
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_LOC.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_LOCALITES');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_LOCALITES');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_LOCALITES');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO LOCALITES_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        VILLE,
        NPA,
        CAN_NUMERO,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.VILLE,
        api_rec.NPA,
        api_rec.CAN_NUMERO,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_LOCALITES');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_OFFRECANTONS
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_OFCAN.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRECANTONS');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRECANTONS');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRECANTONS');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO OFFRECANTONS_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        OFF_NUMERO,
        CAN_NUMERO,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.OFF_NUMERO,
        api_rec.CAN_NUMERO,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRECANTONS');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_OFFRECATEGORIES
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_OFCAT.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRECATEGORIES');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRECATEGORIES');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRECATEGORIES');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO OFFRECATEGORIES_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        CAT_NUMERO,
        OFF_NUMERO,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.CAT_NUMERO,
        api_rec.OFF_NUMERO,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRECATEGORIES');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_OFFRES
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_OFF.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRES');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRES');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRES');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO OFFRES_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        LIBELLE,
        DESCRIPTION,
        ORGANISATION,
        RUE,
        NUMERORUE,
        LIEN,
        IMAGE,
        DATEDEBUT,
        DATEFIN,
        ESTVALIDEE,
        CON_NUMERO,
        TRAB_NUMERO,
        PRO_NUMERO,
        PRO_NUMERO2,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE,
        LOC_NUMERO,
        MONTANT	   
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.LIBELLE,
        api_rec.DESCRIPTION,
        api_rec.ORGANISATION,
        api_rec.RUE,
        api_rec.NUMERORUE,
        api_rec.LIEN,
        api_rec.IMAGE,
        api_rec.DATEDEBUT,
        api_rec.DATEFIN,
        api_rec.ESTVALIDEE,
        api_rec.CON_NUMERO,
        api_rec.TRAB_NUMERO,
        api_rec.PRO_NUMERO,
        api_rec.PRO_NUMERO2,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE,
        api_rec.LOC_NUMERO,
        api_rec.MONTANT	   
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_OFFRES');
  END insert_jn;
END;
/

CREATE OR REPLACE PACKAGE BODY API_PROFILS
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_PRO.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_PROFILS');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_PROFILS');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_PROFILS');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO PROFILS_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        EMAIL,
        MOTDEPASSE,
        PRENOM,
        NOM,
        DATENAISSANCE,
        SEXE,
        NOTIFICATION,
        ADMIN,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.EMAIL,
        api_rec.MOTDEPASSE,
        api_rec.PRENOM,
        api_rec.NOM,
        api_rec.DATENAISSANCE,
        api_rec.SEXE,
        api_rec.NOTIFICATION,
        api_rec.ADMIN,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_PROFILS');
  END insert_jn;
END;
/


CREATE OR REPLACE PACKAGE BODY API_TYPERABAIS
IS
  PROCEDURE up_autogen_columns(
      api_rec   IN OUT api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    IF (operation         = 'INS') THEN
      IF (api_rec.numero IS NULL) THEN
        SELECT SEQ_TRAB.nextval INTO api_rec.numero FROM DUAL;
      END IF;
      api_rec.CTRLAJUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLAJDATE := SYSDATE;
    ELSE
      api_rec.CTRLMOUSER := SYS_CONTEXT ('USERENV', 'SESSION_USER');
      api_rec.CTRLMODATE := SYSDATE;
    END IF;
  END up_autogen_columns;
  PROCEDURE ins(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'INS');
    insert_jn(api_rec,'INS');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_TYPERABAIS');
  END ins;
  PROCEDURE upd(
      api_rec IN OUT api_row_type)
  IS
  BEGIN
    up_autogen_columns(api_rec, 'UPD');
    insert_jn(api_rec,'UPD');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_TYPERABAIS');
  END upd;
  PROCEDURE del(
      api_rec IN api_row_type)
  IS
  BEGIN
    insert_jn(api_rec,'DEL');
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_TYPERABAIS');
  END del;
  PROCEDURE insert_jn(
      api_rec   IN api_row_type,
      operation IN VARCHAR2 DEFAULT 'INS')
  IS
  BEGIN
    INSERT
    INTO TYPERABAIS_JN
      (
        JN_OPERATION,
        JN_USER,
        JN_DATETIME,
        JN_APPLN,
        JN_SESSION ,
        NUMERO,
        LIBELLE,
        CTRLAJUSER,
        CTRLAJDATE,
        CTRLMOUSER,
        CTRLMODATE
      )
      VALUES
      (
        operation,
        SYS_CONTEXT ('USERENV', 'SESSION_USER'),
        SYSDATE,
        SYS_CONTEXT ('USERENV', 'MODULE'),
        SYS_CONTEXT ('USERENV', 'SESSIONID') ,
        api_rec.NUMERO,
        api_rec.LIBELLE,
        api_rec.CTRLAJUSER,
        api_rec.CTRLAJDATE,
        api_rec.CTRLMOUSER,
        api_rec.CTRLMODATE
      );
    --EXCEPTION
    --WHEN OTHERS THEN
    --api_ERRORS.ERR_PROCESS('api_TYPERABAIS');
  END insert_jn;
END;
/

CREATE OR REPLACE TRIGGER FKNTM_CONDITIONECOLES BEFORE
  UPDATE OF OFF_NUMERO,
    ECO_NUMERO ON CONDITIONECOLES BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table CONDITIONECOLES is violated');
END;
/

CREATE OR REPLACE TRIGGER FKNTM_ETUDIERS BEFORE
  UPDATE OF ECO_NUMERO,
    PRO_NUMERO ON ETUDIERS BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table ETUDIERS is violated');
END;
/

CREATE OR REPLACE TRIGGER FKNTM_EVALUATIONS BEFORE
  UPDATE OF OFF_NUMERO,
    PRO_NUMERO ON EVALUATIONS BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table EVALUATIONS is violated');
END;
/

CREATE OR REPLACE TRIGGER FKNTM_INTERETCATEGORIES BEFORE
  UPDATE OF PRO_NUMERO,
    CAT_NUMERO ON INTERETCATEGORIES BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table INTERETCATEGORIES is violated');
END;
/

CREATE OR REPLACE TRIGGER FKNTM_INTERETLIEUX BEFORE
  UPDATE OF CAN_NUMERO,
    PRO_NUMERO ON INTERETLIEUX BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table INTERETLIEUX is violated');
END;
/

CREATE OR REPLACE TRIGGER FKNTO_LOCALITES BEFORE
  UPDATE OF CAN_NUMERO ON LOCALITES FOR EACH ROW BEGIN IF :old.CAN_NUMERO IS NOT NULL THEN raise_application_error(-20225,'Non Transferable FK constraint FK_LOC_CAN on table LOCALITES is violated');
END IF;
END;
/

CREATE OR REPLACE TRIGGER FKNTM_OFFRECANTONS BEFORE
  UPDATE OF CAN_NUMERO,
    OFF_NUMERO ON OFFRECANTONS BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table OFFRECANTONS is violated');
END;
/

CREATE OR REPLACE TRIGGER FKNTM_OFFRECATEGORIES BEFORE
  UPDATE OF CAT_NUMERO,
    OFF_NUMERO ON OFFRECATEGORIES BEGIN raise_application_error(-20225,'Non Transferable FK constraint  on table OFFRECATEGORIES is violated');
END;
/


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            30
-- CREATE INDEX                            21
-- ALTER TABLE                             55
-- CREATE PACKAGE                          15
-- CREATE PACKAGE BODY                     15
-- CREATE TRIGGER                          98
-- CREATE SEQUENCE                         15